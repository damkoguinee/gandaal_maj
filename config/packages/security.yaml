security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UserAuthenticator
            logout:
                path: app_logout
                target: app_login
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: false

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Restriction pour les actions de suppression et modification pour ROLE_SUPPRESSION et ROLE_MODIFICATION
        - { path: ^/gandaal/.*(/delete), roles: ['ROLE_SUPPRESSION', 'ROLE_ADMIN', 'ROLE_DEV'] }
        - { path: ^/gandaal/.*(/edit), roles: ['ROLE_MODIFICATION', 'ROLE_ADMIN', 'ROLE_DEV'] }
        - { path: ^/gandaal/.*(/new), roles: ['ROLE_MODIFICATION', 'ROLE_ADMIN', 'ROLE_DEV'] }

        # Restriction spécifique pour ROLE_FONDATEUR - empêche l'accès aux routes /delete, /new, /edit
        - { path: ^/gandaal/.*(/delete|/new|/edit), roles: ['!ROLE_FONDATEUR'] }

        # Comptabilité
        - { path: ^/gandaal/administration/comptabilite/admin, roles: ['ROLE_COMPTABLE_ADMIN'] }
        - { path: ^/gandaal/administration/comptabilite, roles: ['ROLE_COMPTABLE'] }

        # Scolarité
        - { path: ^/gandaal/administration/scolarite/admin, roles: ['ROLE_SCOLARITE', 'ROLE_SCOLARITE_ADMIN'] }
        - { path: ^/gandaal/administration/scolarite, roles: ['ROLE_SCOLARITE'] }

        # Pédagogie
        - { path: ^/gandaal/administration/pedagogie/admin, roles: ['ROLE_PEDAGOGIE', 'ROLE_PEDAGOGIE_ADMIN'] }
        - { path: ^/gandaal/administration/pedagogie, roles: ['ROLE_PEDAGOGIE'] }

        # Secrétariat
        - { path: ^/gandaal/administration/secretariat/admin, roles: ['ROLE_SECRETAIRE_ADMIN'] }
        - { path: ^/gandaal/administration/secretariat, roles: ['ROLE_SECRETAIRE'] }

        # Accès général pour tout utilisateur authentifié
        - { path: ^/gandaal, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_COMPTABLE: ROLE_ADMINISTRATION, ROLE_PERSONNEL
        ROLE_COMPTABLE_ADMIN: ROLE_COMPTABLE

        ROLE_SECRETAIRE: ROLE_ADMINISTRATION, ROLE_PERSONNEL
        ROLE_SECRETAIRE_ADMIN: ROLE_SECRETAIRE

        ROLE_PEDAGOGIE: ROLE_ADMINISTRATION, ROLE_PERSONNEL
        ROLE_PEDAGOGIE_ADMIN: ROLE_PEDAGOGIE

        ROLE_SCOLARITE: ROLE_ADMINISTRATION, ROLE_PERSONNEL
        ROLE_SCOLARITE_ADMIN: ROLE_SCOLARITE

        # ROLE_FONDATEUR hérite des rôles d'admin dans chaque département
        ROLE_FONDATEUR: ROLE_COMPTABLE_ADMIN, ROLE_PEDAGOGIE_ADMIN, ROLE_SCOLARITE_ADMIN

        # ROLE_ADMIN hérite de ROLE_FONDATEUR mais a un accès complet
        ROLE_ADMIN: ROLE_COMPTABLE_ADMIN, ROLE_PEDAGOGIE_ADMIN, ROLE_SCOLARITE_ADMIN, ROLE_SECRETAIRE_ADMIN

        # ROLE_DEV hérite de ROLE_ADMIN et a un accès complet
        ROLE_DEV: ROLE_ADMIN



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
